@using Application.Job
@using Application.PluginInterfaces.Job
@using Application.PluginInterfaces.User
@using Application.User
@using Domain.Entities.Job
@using HybridMobileProj.Client.Stores.Users
@using System.Globalization

@inject IRequestRepository RequestRepository
@inject IContractorRepository ContractorRepository
@inject ISurveyorRepository SurveyorRepository
@inject IPropertyManagerRepository PropertyManagerRepository
<!-- Modal -->
<dialog id="createNotesModal" class="modal modal-bottom sm:modal-middle">
  <div class="modal-box">
    <form method="dialog" class="modal-backdrop">
      <button class="btn btn-sm btn-circle absolute right-2 top-2 border bg-white">✕</button>
    </form>

    <h3 class="text-base font-semibold text-[#878A99]">Create New Property</h3>

    <div class="flex flex-col gap-3 mt-7">
      <div class="flex flex-col">
        <label for="Name" class="text-12px text-primary-color">New Note</label>
        <input type="text" class="generic-input-field w-full h-16" @bind="NoteMessage">
      </div>

      <button class="bg-dark-blue w-full h-10 text-12px mt-3" @onclick="() => CreateNote()">Create Note</button>
    </div>

    <div class="flex flex-col gap-3 mt-3">
      @foreach (var note in request.Notes)
      {
        <div class="container-border px-2 py-3 flex flex-col gap-2">
          <h2 class="text-primary-color text-12px">@note.CreatedDate.ToString("f", new CultureInfo("en-GB"))</h2>
          <p class="text-secondary-color text-12px">@note.Message</p>
          <p class="text-secondary-color text-[8px]">By @note.Username</p>
        </div>
      }

    </div>

  </div>
</dialog>

<div class="px-3 py-6 container-border">
  <div class="grid grid-cols-1 grid-rows-1 items-center">
    <div class="flex justify-between">
      <div class="">
        <h2 class="text-[#878A99] text-sm font-semibold">Request</h2>
        <p class="text-[#878A99] text-12px">Property Information</p>
      </div>

      <button class="bg-light-blue w-20 h-8 text-10px" onclick="createNotesModal.showModal()">Notes</button>
    </div>

  </div>
</div>

@code {
  [Parameter]
  public Request request { get; set; }
  public RequestService _requestService;
  public ContractorService _contractorService;
  public SurveyorService _surveyorService;
  public PropertyManagerService _propertyManagerService;
  CurrentUserSingleton CurrentUser = CurrentUserSingleton.Instance();


  public string NoteMessage = "";

  protected override async Task OnInitializedAsync()
  {
    _requestService = new RequestService(RequestRepository);
    _contractorService = new ContractorService(ContractorRepository);
    _surveyorService = new SurveyorService(SurveyorRepository);
    _propertyManagerService = new PropertyManagerService(PropertyManagerRepository);
  }

  private async Task CreateNote()
  {
    string username = "";
    switch (CurrentUser.User)
    {
      case Domain.Enums.UserEnum.PropertyManager:
        username = request.PropertyManager.FullName;
        break;
      case Domain.Enums.UserEnum.Surveyor:
        username = request.Surveyor.FullName;
        break;
      case Domain.Enums.UserEnum.Contractor:
        username = request.Contractor.FullName;
        break;
    }

    request.Notes.Add(new Note { Message = NoteMessage, Username = username });
    await _requestService.UpdateRequestAsync(request);

    NoteMessage = "";
    StateHasChanged();
  }
}